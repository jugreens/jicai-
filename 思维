//https://blog.csdn.net/JXUFE_ACMer/article/details/80114644
#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
const int N = 1e6+10;

int main()
{
    int n;
    ll a,b;
    cin>>n;
    while(n--)
    {
        cin>>a>>b;
        ll t=cbrt(a*b);
        ll x=a/t;
        ll y=b/t;
        if((x*x*y==a)&&(x*y*y==b))
            cout<<"Yes"<<endl;
        else
            cout<<"No"<<endl;
    }
return 0;
}


//https://ac.nowcoder.com/acm/contest/945/H
#include<bits/stdc++.h>

using namespace std;
#define inf 0x3f3f3f3f
#define ll long long
struct node 
{
    int num;
    int w;
}ed[100000];
int cmp(node a , node b)
{
    if(a.w==b.w)
        return a.num<b.num;
     return a.w < b.w  ;
}
int main() 
{
    int n;
    scanf("%d",&n);
    for (int i = 0; i < n; i++) 
    {
        ed[i].num = i;
        scanf("%d", &ed[i].w);
    }
    sort(ed,ed+n,cmp);
    int ans = 0;
    for (int j = 0; j < n; j++) 
    {
        ans = max(ans, ed[j].num - j);
    }
    printf("%d\n", ++ans);
}


//https://blog.csdn.net/PleasantlY1/article/details/80720725

#include<bits/stdc++.h>
using namespace std;
int main()
{
    int n,i,f[100005];
    char a[100005];
    memset(f,0,sizeof(f));
    scanf("%d %s",&n,a);
    int ans=0,sum=0,k=0;
    for(i=0;i<n;i++)
        if(a[i]=='0')
        {
            sum++;
            f[k]++; 
        }
        else
            k++;
    for(i=1;i<=k;i++)
        ans=max(ans,f[i-1]+f[i]);
    if(sum==n||ans==sum)
        printf("%d\n",sum);
    else
        printf("%d\n",ans+1);
    return 0;
}



//https://ac.nowcoder.com/acm/contest/984/A

#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
const int N = 1e6+10;
stack<ll> s;
ll  l[N],sum = 0 ;
ll  high[N],count1[N];
int main()
{

	int n;
	cin>>n;
	for(int i=1;i<=n;i++)
		cin>>high[i];
	for(int i=n;i>=1;i--)
	{
		while(!s.empty() && high[s.top()]<high[i]) s.pop();
		if(s.empty())
			count1[i]=n+1;
		else
			count1[i]=s.top();
		s.push(i);
	}
	for(int i=1;i<=n;i++)
	{
	    sum+=count1[i]-i-1;
	}
	cout<<sum<<endl;
	return 0;
}


