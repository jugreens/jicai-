https://blog.csdn.net/xiaofengcanyuexj/article/details/9818021
https://blog.csdn.net/sdz20172133/article/details/90732232
#include <iostream>
#include <fstream>
#include <algorithm>
#include <cmath>
#include <ctime>
#include <cstdio>
#include <cstdlib>
#include <cstring>
using namespace std;
const int MOD = 1E9+7;
typedef long long LL;
LL f(LL a,LL b,int p)///计算a^b %p
{
	LL ans=1%p;///ans不能为1，b为0，p为1的情况不成立
	for(;b;b>>=1)
	{
		if(b&1) 
			ans=(ans*a)%p ;
		a=a*a%p ;
	}
	return ans;
}
int main(){
    LL n;
    while(scanf("%lld",&n)!=EOF&&n) {
        printf("%lld\n",(f(4,n-1,MOD)%MOD+f(2,n-1,MOD)%MOD)%MOD);
    }
    return 0;
}
则可用费马小定理(a^(p-1))≡1(mod p))降幂。n>=long long int ；

